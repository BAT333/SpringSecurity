PASSO A PASSO PARA CRIA SPRING SECURITY
POR TOKEN

ADD DEPENDECIA DO SPRING SECURRITY -> ESSA PRIMEIRO PASSO

CRIA ENTIDADE USARIO->
LOGIN E SENHA, ROLE, QUE VAI SER DO TIPO String
Bom essa role, serve para indetificar que esse usario é adm ou não etc

 @Override
    public Collection<? extends GrantedAuthority> getAuthorities() {
        return List.of(new SimpleGrantedAuthority("ROLE_USER"));
    }
AQUI ONDE VAI TER AS ROLES DO SPRING, ONDE ELE VAI VER E DECIDIR QUAL AUTORIDADE DESTE USARIO NESSA PARTE QUE PODEMOS
ADD NOVOS TIPOS DE ROLES







 SE CRIA UM ENUM DE ROLES, COM TIPO DE ROLES QUE VC QUER SO ADIM E USER OU TEM ALGUM A MAIS

package com.example.userSeguranca.User;

public enum UserRoles {
    ADMIN("admin"),
    USER("user");

    private String velue;
    UserRoles(String value){
        this.velue = value;
    }

    public String getVelue() {
        return velue;
    }
}


depois usar isso na getAuthentic

@Override
    public Collection<? extends GrantedAuthority> getAuthorities() {
      if(this.role == UserRoles.ADMIN) return List.of(new SimpleGrantedAuthority("ROLE_ADMIN"),new SimpleGrantedAuthority("ROLE_USER"));
      else return List.of(new SimpleGrantedAuthority("ROLE_USER"));
      //  return List.of(new SimpleGrantedAuthority("ROLE_USER"));
    }





DEPOIS CRIAR REPOSITORY,CRIA A SERVICE DE AUTENTICAÇÃO, DESABLITAR AS CONFIG PADRÃO DO SPRING,
CONFIGURA TUDO LA, PADRÃO CRIPTOGRAFIA, AUTENTICAÇÃO TUDO MAIS,Autorização tudo mais com url


@Bean
    public SecurityFilterChain filterChain(HttpSecurity security) throws Exception {
        return security.csrf(AbstractHttpConfigurer::disable)
                .sessionManagement(http->http.sessionCreationPolicy(SessionCreationPolicy.STATELESS))
                .authorizeHttpRequests(authorizatios->authorizatios
                        .requestMatchers(HttpMethod.POST,"/login/register").hasRole("ADMIN")
                        .requestMatchers(HttpMethod.POST,"/login").permitAll()
                        .anyRequest().authenticated()
                  )
                .addFilterBefore(securityFilter, UsernamePasswordAuthenticationFilter.class).build();
    }
AUTENTICAÇÃO QUE SO ADIM PODE CADASTRA NOVO USER
E CRIPTOGRAFIA SO PODE SER FEITA NO CONTROLLER











--------------------------------------------------------------------------------------------------------------------------------------------------------------
NOVAS MANEIRA DE FAZER MANYTOMANY
@ManyToMany
@JoinTable(
name = "qual vai ser nome da tabela",
joincolumns = @joincolumns(name = "primeirorelacionamet),
inverseJoinColumns = @joincolumns(name = "segundorelacionamento")
)

@Repository-> anotação repository


